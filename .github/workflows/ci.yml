name: CI

on:
  pull_request:
  push:
    branches:
      - master
      - devel
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

jobs:

  # take out unit tests
  test:
    name: Unit tests (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
        - "3.11"
    env:
      QUAPY_TESTS_OMIT_LARGE_DATASETS: True
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install "qunfold @ git+https://github.com/mirkobunse/qunfold@main"
        python -m pip install -e .[bayes,tests]
    - name: Test with unittest
      run: python -m unittest

  # build and push documentation to gh-pages (only if pushed to the master branch)
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.11
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel "jax[cpu]"
        python -m pip install "qunfold @ git+https://github.com/mirkobunse/qunfold@main"
        python -m pip install -e .[neural,docs]
    - name: Build documentation
      run: sphinx-build -M html docs/source docs/build
    - name: Publish documentation
      run: |
        git clone ${{ github.server_url }}/${{ github.repository }}.git --branch gh-pages --single-branch __gh-pages/
        cp -r docs/build/html/* __gh-pages/
        cd __gh-pages/
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git commit -am "Documentation based on ${{ github.sha }}" || true
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        branch: gh-pages
        directory: __gh-pages/
        github_token: ${{ secrets.GITHUB_TOKEN }}

  release:
    name: Build & Publish Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip build twine
      - name: Build package
        run: python -m build
      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
           # use these for TESTs!
#          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
#          repository_url: https://test.pypi.org/legacy/
          password: ${{ secrets.PYPI_API_TOKEN }}
          repository_url: https://upload.pypi.org/legacy/
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            Changes in this release: 
            - see commit history for details
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}